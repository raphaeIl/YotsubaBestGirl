// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YotsubaBestGirl.Database;

#nullable disable

namespace YotsubaBestGirl.Database.Migrations
{
    [DbContext(typeof(YotsubaContext))]
    [Migration("20250623043512_AddMostUserDataDBs")]
    partial class AddMostUserDataDBs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.BookDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AcquiredGrowthRewardSeqIds")
                        .HasColumnType("text");

                    b.Property<int>("ActiveSkillLevel")
                        .HasColumnType("integer");

                    b.Property<long>("AllCardId")
                        .HasColumnType("bigint");

                    b.Property<int>("BuyBack")
                        .HasColumnType("integer");

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPremiumId")
                        .HasColumnType("integer");

                    b.Property<long>("CostumeCardId")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupCardId")
                        .HasColumnType("text");

                    b.Property<int>("InterludeVoice1")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice2")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice3")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice4")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice5")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice6")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice7")
                        .HasColumnType("integer");

                    b.Property<int>("IsPairCard")
                        .HasColumnType("integer");

                    b.Property<int>("IsSignedCard")
                        .HasColumnType("integer");

                    b.Property<int>("Kirameki")
                        .HasColumnType("integer");

                    b.Property<int>("KiramekiSigned")
                        .HasColumnType("integer");

                    b.Property<int>("Kiratoki")
                        .HasColumnType("integer");

                    b.Property<int>("KiratokiSigned")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("LimitbreakRank")
                        .HasColumnType("integer");

                    b.Property<int>("LimitbreakRankSigned")
                        .HasColumnType("integer");

                    b.Property<long>("MemberCardId")
                        .HasColumnType("bigint");

                    b.Property<int>("PassiveSkillLevel1")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel2")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel3")
                        .HasColumnType("integer");

                    b.Property<int>("PictureResourceIdx1")
                        .HasColumnType("integer");

                    b.Property<int>("PictureResourceIdx6")
                        .HasColumnType("integer");

                    b.Property<int>("PictureResourceIdx7")
                        .HasColumnType("integer");

                    b.Property<int>("PictureResourceIdx8")
                        .HasColumnType("integer");

                    b.Property<int>("Sell")
                        .HasColumnType("integer");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Tokimeki")
                        .HasColumnType("integer");

                    b.Property<int>("TokimekiSigned")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_book");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.CardDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AcquiredGrowthRewardSeqIds")
                        .HasColumnType("text");

                    b.Property<int>("ActiveSkillExp")
                        .HasColumnType("integer");

                    b.Property<int>("ActiveSkillLevel")
                        .HasColumnType("integer");

                    b.Property<int>("AwakePriority")
                        .HasColumnType("integer");

                    b.Property<int>("Bgm")
                        .HasColumnType("integer");

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPremiumId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPropertyId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPropertyId2")
                        .HasColumnType("integer");

                    b.Property<string>("CardUniqueId")
                        .HasColumnType("text");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice1")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice2")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice3")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice4")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice5")
                        .HasColumnType("integer");

                    b.Property<int>("IsPairCard")
                        .HasColumnType("integer");

                    b.Property<int>("IsSignedCard")
                        .HasColumnType("integer");

                    b.Property<int>("Kirameki")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("LevelAwake")
                        .HasColumnType("integer");

                    b.Property<int>("LimitbreakRank")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillExp1")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillExp2")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillExp3")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel1")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel2")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel3")
                        .HasColumnType("integer");

                    b.Property<int>("Protect")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceIdx")
                        .HasColumnType("integer");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Tokimeki")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_card");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.ChapterDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_chapter");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.GachaHistoryDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CurrentBoxId")
                        .HasColumnType("integer");

                    b.Property<int>("GachaId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupWeightCnt")
                        .HasColumnType("integer");

                    b.Property<int>("IsPaid")
                        .HasColumnType("integer");

                    b.Property<long>("LastGachaDate")
                        .HasColumnType("bigint");

                    b.Property<int>("LimitCnt")
                        .HasColumnType("integer");

                    b.Property<int>("LumpCnt")
                        .HasColumnType("integer");

                    b.Property<long>("PaidDate")
                        .HasColumnType("bigint");

                    b.Property<int>("PaidLumpResetCount")
                        .HasColumnType("integer");

                    b.Property<long>("PaidLumpResetDate")
                        .HasColumnType("bigint");

                    b.Property<int>("PaidSingleResetCount")
                        .HasColumnType("integer");

                    b.Property<long>("PaidSingleResetDate")
                        .HasColumnType("bigint");

                    b.Property<int>("RankupBoxId")
                        .HasColumnType("integer");

                    b.Property<int>("SingleCnt")
                        .HasColumnType("integer");

                    b.Property<int>("Step")
                        .HasColumnType("integer");

                    b.Property<int>("TicketCnt")
                        .HasColumnType("integer");

                    b.Property<int>("TotalCnt")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_gacha_history");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.ItemDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<long>("ExpireDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_item");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.MemberDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AddCount")
                        .HasColumnType("integer");

                    b.Property<int>("Dearlevel")
                        .HasColumnType("integer");

                    b.Property<int>("Dearpoint")
                        .HasColumnType("integer");

                    b.Property<string>("ExceptHomeMessageIds")
                        .HasColumnType("text");

                    b.Property<long>("ExpireDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemIdQueue")
                        .HasColumnType("text");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<int>("MemberPictureId")
                        .HasColumnType("integer");

                    b.Property<int>("NameRank")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_member");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.MemberPictureDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("MemberPictureId")
                        .HasColumnType("integer");

                    b.Property<string>("ReleasedEmotionResourceIds")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_member_picture");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.OptionsDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Bgm")
                        .HasColumnType("integer");

                    b.Property<int>("Gyro")
                        .HasColumnType("integer");

                    b.Property<int>("PowerSaving")
                        .HasColumnType("integer");

                    b.Property<int>("ProtectCardFirst")
                        .HasColumnType("integer");

                    b.Property<int>("ProtectCardR4")
                        .HasColumnType("integer");

                    b.Property<int>("ProtectCardR5")
                        .HasColumnType("integer");

                    b.Property<int>("ProtectCardR6")
                        .HasColumnType("integer");

                    b.Property<int>("PushAp")
                        .HasColumnType("integer");

                    b.Property<int>("PushAppointment")
                        .HasColumnType("integer");

                    b.Property<int>("PushChat")
                        .HasColumnType("integer");

                    b.Property<int>("PushCooking")
                        .HasColumnType("integer");

                    b.Property<int>("PushGuerrilla")
                        .HasColumnType("integer");

                    b.Property<int>("PushSystem")
                        .HasColumnType("integer");

                    b.Property<int>("PushWork")
                        .HasColumnType("integer");

                    b.Property<int>("Se")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.Property<int>("Voice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_options");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.PlayerAccountDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uuid");

                    b.HasKey("Id");

                    b.ToTable("t_player_account");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.StoryDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Choice1")
                        .HasColumnType("integer");

                    b.Property<int>("Choice2")
                        .HasColumnType("integer");

                    b.Property<int>("Choice3")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_story");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UnitDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CardId1")
                        .HasColumnType("bigint");

                    b.Property<long>("CardId2")
                        .HasColumnType("bigint");

                    b.Property<long>("CardId3")
                        .HasColumnType("bigint");

                    b.Property<long>("CardId4")
                        .HasColumnType("bigint");

                    b.Property<long>("CardId5")
                        .HasColumnType("bigint");

                    b.Property<int>("Idx")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId1")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId2")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId3")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId4")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId5")
                        .HasColumnType("integer");

                    b.Property<long>("Sub1CardId1")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub1CardId2")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub1CardId3")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub1CardId4")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub1CardId5")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub2CardId1")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub2CardId2")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub2CardId3")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub2CardId4")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub2CardId5")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub3CardId1")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub3CardId2")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub3CardId3")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub3CardId4")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub3CardId5")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub4CardId1")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub4CardId2")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub4CardId3")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub4CardId4")
                        .HasColumnType("bigint");

                    b.Property<long>("Sub4CardId5")
                        .HasColumnType("bigint");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitSkillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("t_user_unit");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UserDB", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Uid"));

                    b.Property<int>("ActiveUnit")
                        .HasColumnType("integer");

                    b.Property<int>("Ap")
                        .HasColumnType("integer");

                    b.Property<int>("Birthday")
                        .HasColumnType("integer");

                    b.Property<int>("BirthdayCount")
                        .HasColumnType("integer");

                    b.Property<long>("BirthdayLastDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ChallengeUpdateStep")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Clear")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("ContinueLoginNum")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("EventPlayingPolicy")
                        .HasColumnType("integer");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<int>("FavoriteCharacters")
                        .HasColumnType("integer");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("FirstnameKana")
                        .HasColumnType("text");

                    b.Property<int>("Fragment")
                        .HasColumnType("integer");

                    b.Property<int>("FriendPoint")
                        .HasColumnType("integer");

                    b.Property<int>("HomeBackgroundId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeBgm")
                        .HasColumnType("integer");

                    b.Property<int>("IsClearBeginner")
                        .HasColumnType("integer");

                    b.Property<int>("IsTutorialFinish")
                        .HasColumnType("integer");

                    b.Property<long>("LastApDate")
                        .HasColumnType("bigint");

                    b.Property<long>("LastChallengeLoginDate")
                        .HasColumnType("bigint");

                    b.Property<long>("LastLoginDate")
                        .HasColumnType("bigint");

                    b.Property<int>("LastSeasonId")
                        .HasColumnType("integer");

                    b.Property<long>("LastSpecialApDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("LastnameKana")
                        .HasColumnType("text");

                    b.Property<long>("Leaf")
                        .HasColumnType("bigint");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("LoginNum")
                        .HasColumnType("integer");

                    b.Property<string>("Muid")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<long>("OpenedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("PlayerTitleId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerTitleTargetId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileBackgroundId")
                        .HasColumnType("integer");

                    b.Property<long>("ProfileCardId")
                        .HasColumnType("bigint");

                    b.Property<int>("Ruby")
                        .HasColumnType("integer");

                    b.Property<string>("SessionId")
                        .HasColumnType("text");

                    b.Property<int>("SpecialAp")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("TotalLoginNum")
                        .HasColumnType("integer");

                    b.Property<int>("Tutorial")
                        .HasColumnType("integer");

                    b.Property<string>("WalletId")
                        .HasColumnType("text");

                    b.HasKey("Uid");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("t_user");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.BookDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Books")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.CardDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Cards")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.ChapterDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Chapters")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.GachaHistoryDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("GachaHistory")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.ItemDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Items")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.MemberDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Members")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.MemberPictureDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("MemberPictures")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.OptionsDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Options")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.StoryDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Stories")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UnitDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Units")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UserDB", b =>
                {
                    b.OwnsOne("YotsubaBestGirl.Database.Entities.CurrencyDB", "Currency", b1 =>
                        {
                            b1.Property<int>("UserDBUid")
                                .HasColumnType("integer");

                            b1.Property<int>("FreeCoin")
                                .HasColumnType("integer")
                                .HasColumnName("FreeCoin");

                            b1.Property<int>("PayCoin")
                                .HasColumnType("integer")
                                .HasColumnName("PayCoin");

                            b1.HasKey("UserDBUid");

                            b1.ToTable("t_user");

                            b1.WithOwner()
                                .HasForeignKey("UserDBUid");
                        });

                    b.Navigation("Currency")
                        .IsRequired();
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UserDB", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Cards");

                    b.Navigation("Chapters");

                    b.Navigation("GachaHistory");

                    b.Navigation("Items");

                    b.Navigation("MemberPictures");

                    b.Navigation("Members");

                    b.Navigation("Options");

                    b.Navigation("Stories");

                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
