// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YotsubaBestGirl.Database;

#nullable disable

namespace YotsubaBestGirl.Database.Migrations
{
    [DbContext(typeof(YotsubaContext))]
    [Migration("20250623014729_RemoveExtraSetupInOnModelCreating")]
    partial class RemoveExtraSetupInOnModelCreating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.CardDB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AcquiredGrowthRewardSeqIds")
                        .HasColumnType("text");

                    b.Property<int>("ActiveSkillExp")
                        .HasColumnType("integer");

                    b.Property<int>("ActiveSkillLevel")
                        .HasColumnType("integer");

                    b.Property<int>("AwakePriority")
                        .HasColumnType("integer");

                    b.Property<int>("Bgm")
                        .HasColumnType("integer");

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPremiumId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPropertyId")
                        .HasColumnType("integer");

                    b.Property<int>("CardPropertyId2")
                        .HasColumnType("integer");

                    b.Property<string>("CardUniqueId")
                        .HasColumnType("text");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice1")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice2")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice3")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice4")
                        .HasColumnType("integer");

                    b.Property<int>("InterludeVoice5")
                        .HasColumnType("integer");

                    b.Property<int>("IsPairCard")
                        .HasColumnType("integer");

                    b.Property<int>("IsSignedCard")
                        .HasColumnType("integer");

                    b.Property<int>("Kirameki")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("LevelAwake")
                        .HasColumnType("integer");

                    b.Property<int>("LimitbreakRank")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillExp1")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillExp2")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillExp3")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel1")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel2")
                        .HasColumnType("integer");

                    b.Property<int>("PassiveSkillLevel3")
                        .HasColumnType("integer");

                    b.Property<int>("Protect")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceIdx")
                        .HasColumnType("integer");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("integer");

                    b.Property<int>("Tokimeki")
                        .HasColumnType("integer");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.PlayerAccountDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uuid");

                    b.HasKey("Id");

                    b.ToTable("player_account");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UserDB", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Uid"));

                    b.Property<int>("ActiveUnit")
                        .HasColumnType("integer");

                    b.Property<int>("Ap")
                        .HasColumnType("integer");

                    b.Property<int>("Birthday")
                        .HasColumnType("integer");

                    b.Property<int>("BirthdayCount")
                        .HasColumnType("integer");

                    b.Property<long>("BirthdayLastDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ChallengeUpdateStep")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("ContinueLoginNum")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("EventPlayingPolicy")
                        .HasColumnType("integer");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<int>("FavoriteCharacters")
                        .HasColumnType("integer");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("FirstnameKana")
                        .HasColumnType("text");

                    b.Property<int>("Fragment")
                        .HasColumnType("integer");

                    b.Property<int>("FriendPoint")
                        .HasColumnType("integer");

                    b.Property<int>("HomeBackgroundId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeBgm")
                        .HasColumnType("integer");

                    b.Property<int>("IsClearBeginner")
                        .HasColumnType("integer");

                    b.Property<int>("IsTutorialFinish")
                        .HasColumnType("integer");

                    b.Property<long>("LastApDate")
                        .HasColumnType("bigint");

                    b.Property<long>("LastChallengeLoginDate")
                        .HasColumnType("bigint");

                    b.Property<long>("LastLoginDate")
                        .HasColumnType("bigint");

                    b.Property<int>("LastSeasonId")
                        .HasColumnType("integer");

                    b.Property<long>("LastSpecialApDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("LastnameKana")
                        .HasColumnType("text");

                    b.Property<long>("Leaf")
                        .HasColumnType("bigint");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("LoginNum")
                        .HasColumnType("integer");

                    b.Property<string>("Muid")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<long>("OpenedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("PlayerTitleId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerTitleTargetId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileBackgroundId")
                        .HasColumnType("integer");

                    b.Property<long>("ProfileCardId")
                        .HasColumnType("bigint");

                    b.Property<int>("Ruby")
                        .HasColumnType("integer");

                    b.Property<string>("SessionId")
                        .HasColumnType("text");

                    b.Property<int>("SpecialAp")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("TotalLoginNum")
                        .HasColumnType("integer");

                    b.Property<int>("Tutorial")
                        .HasColumnType("integer");

                    b.Property<string>("WalletId")
                        .HasColumnType("text");

                    b.HasKey("Uid");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.CardDB", b =>
                {
                    b.HasOne("YotsubaBestGirl.Database.Entities.UserDB", "User")
                        .WithMany("Cards")
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UserDB", b =>
                {
                    b.OwnsOne("YotsubaBestGirl.Database.Entities.CurrencyDB", "Currency", b1 =>
                        {
                            b1.Property<int>("UserDBUid")
                                .HasColumnType("integer");

                            b1.Property<int>("FreeCoin")
                                .HasColumnType("integer")
                                .HasColumnName("FreeCoin");

                            b1.Property<int>("PayCoin")
                                .HasColumnType("integer")
                                .HasColumnName("PayCoin");

                            b1.HasKey("UserDBUid");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserDBUid");
                        });

                    b.Navigation("Currency")
                        .IsRequired();
                });

            modelBuilder.Entity("YotsubaBestGirl.Database.Entities.UserDB", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
